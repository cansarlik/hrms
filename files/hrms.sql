-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.abilities
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    information_id integer NOT NULL,
    ability_name character varying(30) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.offices
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 1000 CACHE 1 ),
    office_name character varying(30) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.employees
(
    user_id integer NOT NULL,
    first_name character varying(30) NOT NULL,
    last_name character varying(30) NOT NULL,
    identity_no character varying(11) NOT NULL,
    birth_year integer NOT NULL,
    title_id integer NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.companies
(
    user_id integer NOT NULL,
    company_name character varying(60) NOT NULL,
    website character varying(30) NOT NULL,
    phone character varying(10) NOT NULL,
    verified_by_system boolean NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.images
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    information_id integer NOT NULL,
    image_url character varying(100) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.project_announces
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    description character varying(500) NOT NULL,
    office_id integer NOT NULL,
    title_id integer NOT NULL,
    company_id integer NOT NULL,
    release_date date NOT NULL,
    deadline date NOT NULL,
    min_salary integer,
    max_salary integer,
    open_titles_amount integer NOT NULL,
    active boolean NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.project_experiences
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    company_name character varying(100) NOT NULL,
    title_name character varying(30) NOT NULL,
    start_year integer NOT NULL,
    end_year integer,
    information_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.languages
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    language_name character varying(30) NOT NULL,
    language_level integer NOT NULL,
    information_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE public.staffs
(
    user_id integer NOT NULL,
    first_name character varying(30) NOT NULL,
    last_name character varying(30) NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.titles
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    title_name character varying(60) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.informations
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    github_url character varying(100),
    linkedin_url character varying(100),
    description character varying(500),
    employee_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.inventories
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    item_name character varying(60) NOT NULL,
    deliverer_staff character varying(60) NOT NULL,
    start_year integer NOT NULL,
    end_year integer,
    information_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 100000 CACHE 1 ),
    email character varying(60) NOT NULL,
    password character varying(60) NOT NULL,
    verified boolean NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE public.abilities
    ADD FOREIGN KEY (information_id)
    REFERENCES public.informations (id)
    NOT VALID;


ALTER TABLE public.employees
    ADD FOREIGN KEY (title_id)
    REFERENCES public.titles (id)
    NOT VALID;


ALTER TABLE public.employees
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.companies
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.images
    ADD FOREIGN KEY (information_id)
    REFERENCES public.informations (id)
    NOT VALID;


ALTER TABLE public.project_announces
    ADD FOREIGN KEY (company_id)
    REFERENCES public.companies (user_id)
    NOT VALID;


ALTER TABLE public.project_announces
    ADD FOREIGN KEY (office_id)
    REFERENCES public.offices (id)
    NOT VALID;


ALTER TABLE public.project_announces
    ADD FOREIGN KEY (title_id)
    REFERENCES public.titles (id)
    NOT VALID;


ALTER TABLE public.project_experiences
    ADD FOREIGN KEY (information_id)
    REFERENCES public.informations (id)
    NOT VALID;


ALTER TABLE public.languages
    ADD FOREIGN KEY (information_id)
    REFERENCES public.informations (id)
    NOT VALID;


ALTER TABLE public.staffs
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.informations
    ADD FOREIGN KEY (employee_id)
    REFERENCES public.employees (user_id)
    NOT VALID;


ALTER TABLE public.inventories
    ADD FOREIGN KEY (information_id)
    REFERENCES public.informations (id)
    NOT VALID;

END;